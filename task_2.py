# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é find_farthest_orbit(orbits), –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–µ–¥–∏ —Å–ø–∏—Å–∫–∞ –æ—Ä–±–∏—Ç –ø–ª–∞–Ω–µ—Ç (–∫–æ—Ä—Ç–µ–∂ –∏–∑ –¥–ª–∏–Ω –ø–æ–ª—É–æ—Å–µ–π –µ–µ —ç–ª–∏–ø—Å–∞) 
# –Ω–∞–π–¥–µ—Ç —Ç—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–∞–º–∞—è –¥–∞–ª–µ–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ (–æ—Ä–±–∏—Ç–∞ –Ω–∞–∏–±–æ–ª—å—à–µ–π –ø–ª–æ—â–∞–¥–∏ S = ùúãab, –≥–¥–µ a –∏ b - –¥–ª–∏–Ω—ã –ø–æ–ª—É–æ—Å–µ–π
# —ç–ª–∏–ø—Å–∞). –ö—Ä—É–≥–æ–≤—ã–µ –æ—Ä–±–∏—Ç—ã –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å, —Å–∞–º–∞—è –¥–∞–ª–µ–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä—Ç–µ–∂.

def find_farthest_orbit(orbits):
    s_orbits = [a * b for (a, b) in orbits if a != b]
    farthest_orbit = [(a, b) for (a, b) in orbits if a != b and a * b == max(s_orbits)]
    return farthest_orbit[0]

orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
print(*find_farthest_orbit(orbits))
